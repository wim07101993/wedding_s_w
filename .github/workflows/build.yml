name: Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ANDROID_ARTIFACT: android
  WEB_ARTIFACT: web
  GITHUB_PAGES_ARTIFACT: githubPages

jobs:
  getVersion:
    name: get version
    runs-on: ubuntu-latest
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        
  buildAndroidAppBundle:
    name: build Android app-bundle ü§ñ
    runs-on: ubuntu-latest
    if: false
    needs: getVersion
    env:
      ARTIFACT_PATH: wedding_s_w.aab
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install flutter
        uses: subosito/flutter-action@v2
        
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
      
      - run: flutter doctor -v
      - run: flutter pub get
        working-directory: ./app

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: ./app/android
        
      - name: Build appbundle
        working-directory: ./app
        run: flutter build appbundle --build-name ${{ needs.getVersion.outputs.fullSemVer }} --build-number ${{ github.run_number }}
        
      - name: Stage artifact file
        run: mv ./app/build/app/outputs/bundle/release/app-release.aab ${{ env.ARTIFACT_PATH }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ANDROID_ARTIFACT }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error
  
  buildAndroidApk:
    name: build Android apk ü§ñ
    runs-on: ubuntu-latest
    needs: getVersion
    if: false
    env:
      ARTIFACT_PATH: wedding_s_w.apk
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install flutter
        uses: subosito/flutter-action@v2
      
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
      
      - run: flutter doctor -v
      - run: flutter pub get
        working-directory: ./app
        
      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: ./app/android
        
      - name: Build apk
        run: flutter build apk --build-name ${{ needs.getVersion.outputs.fullSemVer }} --build-number ${{ github.run_number }}
        working-directory: ./app
        
      - name: Stage artifact file
        run: mv ./app/build/app/outputs/flutter-apk/app-release.apk  ${{ env.ARTIFACT_PATH }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ANDROID_ARTIFACT }}
          path:  ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error
  
  
  uploadToGooglePlay:
    name: upload to GooglePlay
    runs-on: ubuntu-latest
    needs: buildAndroidAppBundle
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ANDROID_ARTIFACT }}

      - name: Create service_account.json
        run: echo '${{ secrets.PLAY_STORE_CONFIG_JSON }}' > service_account.json
        
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.wimvanlaer.wedding_s_w
          releaseFiles: wedding_s_w.aab
          status: completed
          track: internal

  buildWeb:
    name: build web üåê
    runs-on: ubuntu-latest
    needs: getVersion
    env:
      ARTIFACT_PATH: wedding_s_w/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.10.0
      
      - run: flutter doctor -v
      - run: flutter pub get
        working-directory: ./app
      
      - name: Build app
        run: flutter build web --build-name ${{ needs.getVersion.outputs.fullSemVer }}.${{ github.run_number }}
        working-directory: ./app
        
      - name: Stage artifact file
        run: mv ./app/build/web/ ${{ env.ARTIFACT_PATH }}
         
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.WEB_ARTIFACT }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error
          
  buildGithubPages:
    name: build github pages üêô
    runs-on: ubuntu-latest
    needs: getVersion
    env:
      ARTIFACT_PATH: wedding_s_w/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.10.0
      
      - run: flutter doctor -v
      - run: flutter pub get
        working-directory: ./app
           
      - name: Build app
        run: flutter build web --build-name ${{ needs.getVersion.outputs.fullSemVer }}.${{ github.run_number }} --base-href "/wedding_s_w/"
        working-directory: ./app
        
      - name: Stage artifact file
        run: mv ./app/build/web/ ${{ env.ARTIFACT_PATH }}
         
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.GITHUB_PAGES_ARTIFACT }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error
